"0","calc_data %>% "
"0","  filter(SampleType == ""Control"", Analyte != ""FA"", grepl(""CM"",Well),grepl(""G"",Exp)) %>% "
"0","  filter() %>% "
"0","  group_by(Exp,PlateID,ColID,Analyte) %>%"
"0","  summarise(MeanConc = mean(Conc.mM),"
"0","            CVConc = sd(Conc.mM)/MeanConc*100,"
"0","            PercRecov = MeanConc/10*100,"
"0","            #PercError = abs(10-MeanConc)/10*100,"
"0","            MeanArea = mean(Area),"
"0","            Count = n()) %>%"
"0","  mutate_if(is.double,funs(round(.,1))) %>% "
"0","  print(n = Inf)"
"2","`mutate_if()` ignored the following grouping variables:
Columns `Exp`, `PlateID`, `ColID`
"
"2","funs() is soft deprecated as of dplyr 0.8.0
Please use a list of either functions or lambdas: 

  # Simple named list: 
  list(mean = mean, median = median)

  # Auto named with `tibble::lst()`: 
  tibble::lst(mean, median)

  # Using lambdas
  list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
[90mThis warning is displayed once per session.[39m"
