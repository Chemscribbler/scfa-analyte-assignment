"0","knitr::opts_chunk$set(echo = FALSE, warning = FALSE)"
"0","library(tidyverse)"
"2","Registered S3 method overwritten by 'dplyr':
  method           from
  print.rowwise_df     
"
"2","[30m-- [1mAttaching packages[22m --------------------------------------- tidyverse 1.2.1 --[39m
"
"2","[30m[32mv[30m [34mggplot2[30m 3.2.1     [32mv[30m [34mpurrr  [30m 0.3.2
[32mv[30m [34mtibble [30m 2.1.3     [32mv[30m [34mdplyr  [30m 0.8.3
[32mv[30m [34mtidyr  [30m 0.8.3     [32mv[30m [34mstringr[30m 1.4.0
[32mv[30m [34mreadr  [30m 1.3.1     [32mv[30m [34mforcats[30m 0.4.0[39m
"
"2","[30m-- [1mConflicts[22m ------------------------------------------ tidyverse_conflicts() --
[31mx[30m [34mdplyr[30m::[32mfilter()[30m masks [34mstats[30m::filter()
[31mx[30m [34mdplyr[30m::[32mlag()[30m    masks [34mstats[30m::lag()[39m
"
"0","library(broom)"
"0","library(stringr)"
"0",""
"0","#Data is in a wide format (every peak in an injection on the same row), want to convert it to one peak/row"
"0","WidetoTall <- function(DF) { "
"0","  DF %>% "
"0","    #Removing unneccessary/blank columns in the original sheet"
"0","    select(SampleID,ColID,SampleMTime,starts_with(""AR""),starts_with(""RT"")) %>%"
"0","    #Gather is a tidyverse function that combine columns"
"0","    gather(starts_with(""AR""),key = ""ARPeakNumber"",value = ""Area"") %>% "
"0","    gather(starts_with(""RT""),key = ""RTPeakNumber"",value = ""RT"") %>%"
"0","    #This is just to get the original peak number (so the first peak in each specta is 1, second is 2, etc)"
"0","    mutate("
"0","      ARPeakNumber = as.numeric(substr(ARPeakNumber,4,5)),"
"0","      RTPeakNumber = as.numeric(substr(RTPeakNumber,4,5))"
"0","    ) %>% "
"0","    #Because of how gather works, need to remove mismatched peaks"
"0","    filter(ARPeakNumber == RTPeakNumber) %>% "
"0","    transmute("
"0","      SampleID = SampleID,"
"0","      SampleMTime = SampleMTime,"
"0","      ColID = ColID,"
"0","      InitialPeakNum = ARPeakNumber,"
"0","      Area = Area,"
"0","      RT = RT"
"0","    )}"
"0",""
"0","#Separates the SampleID into its component subgroups to make data easier to wrangle"
"0","divSID <- function(DF){"
"0","  DF %>% "
"0","    separate(col = SampleID,into = c(""Exp"",""Plate"",""Well""),extra = ""merge"",fill = ""right"") %>%"
"0","    separate(col = ColID, into = c(""Misc"",""ColID""),sep = ""="") %>% "
"0","    filter(ColID != ""Blank"") %>% "
"0","    mutate(ColID = as.numeric(ColID),"
"0","           SampleType = if_else(grepl(""c"",Plate),"
"0","                                ""Calibration"","
"0","                                if_else(grepl(""[A,C,M,T][Q,M,N,W]"",Well),""Control"",""Sample"")),"
"0","           CurveID = if_else(grepl(""Cal"",SampleType),as.numeric(substr(Plate,2,3)),NaN),"
"0","           PlateID = if_else(!grepl(""Calibration"",SampleType),as.numeric(substr(Plate,2,3)),NaN),"
"0","           ControlNum = if_else(grepl(""Con"",SampleType),as.numeric(substr(Well,4,5)),NaN))"
"0","}"
"0",""
"0","#A wrapper function"
"0","RawtoTallDiv <- function(DF){"
"0","  DF %>% WidetoTall(.) %>% divSID(.)"
"0","}"
"0","#Used for establishing the factor levels"
"0","scfa_levels <- c(""AA"",""FA"",""PA"",""IsoBA"",""BA"",""IsoVA"",""VA"",""IS"",""IsoCA"",""CA"",""HA"")"
"0",""
"0","#called later down"
"0","#Correlates elution order with sample identity"
"0","PeaktoCompound <- tibble(PeakNumber = 1:10,"
"0","                         Analyte = factor(c(""AA"",""FA"",""PA"",""IsoBA"",""BA"",""IsoVA"",""VA"",""IsoCA"",""CA"",""HA"")))"
"0","PeaktoCompound_NoFA <- tibble(PeakNumber = 1:9,"
"0","                         Analyte = factor(c(""AA"",""PA"",""IsoBA"",""BA"",""IsoVA"",""VA"",""IsoCA"",""CA"",""HA"")))"
"0","PeaktoCompound_IS <- tibble(PeakNumber = 1:10,"
"0","                            Analyte = factor(c(""AA"",""PA"",""IsoBA"",""BA"",""IsoVA"",""VA"",""IS"",""IsoCA"",""CA"",""HA"")))"
"0","PeaktoCompound_ISFA <- tibble(PeakNumber = 1:11,"
"0","                            Analyte = factor(c(""AA"",""FA"",""PA"",""IsoBA"",""BA"",""IsoVA"",""VA"",""IS"",""IsoCA"",""CA"",""HA"")))"
"0","PeaktoCompound_ShortList <- tibble(PeakNumber = 1:3,"
"0","                         Analyte = factor(c(""AA"",""PA"",""BA"")))"
"0","PeaktoCompound_ShortList_IS <- tibble(PeakNumber = 1:4,"
"0","                       Analyte = factor(c(""AA"",""PA"",""BA"",""IS"")))"
"0","PeaktoCompound_ShortList_ISFA <- tibble(PeakNumber = 1:6,"
"0","                         Analyte = factor(c(""AA"",""FA"",""PA"",""IsoBA"",""BA"",""IS"")))"
"0",""
"0",""
"0","data <- read_csv(file = ""C:/Users/jpruyne/Documents/Raw_SCFA_Data/20190819-Blue/data.csv"")"
"2","Parsed with column specification:
cols(
  SID = [31mcol_character()[39m,
  Inst = [31mcol_character()[39m,
  ColID = [31mcol_character()[39m,
  InjTime = [34mcol_datetime(format = """")[39m,
  PeakNum = [32mcol_double()[39m,
  RT = [32mcol_double()[39m,
  PeakType = [31mcol_character()[39m,
  PeakWidth = [32mcol_double()[39m,
  Area = [32mcol_double()[39m
)
"
"0","reformated_data <- data %>% "
"0","  separate(col = SID,into = c(""Exp"",""Plate"",""Well""),extra = ""merge"",fill = ""right"") %>% "
"0","  mutate(ColID = as.numeric(substr(ColID, 10, 11)),"
"0","         SampleType = if_else(grepl(""c"",Plate),"
"0","                              ""Calibration"","
"0","                              if_else(grepl(""[A,C,M,T][Q,M,N,W]"",Well),""Control"",""Sample"")),"
"0","         CurveID = if_else(grepl(""Cal"",SampleType),as.numeric(substr(Plate,2,3)),NaN),"
"0","         PlateID = if_else(!grepl(""Calibration"",SampleType),as.numeric(substr(Plate,2,3)),NaN),"
"0","         ControlNum = if_else(grepl(""Con"",SampleType),as.numeric(substr(Well,4,5)),NaN))"
"0","         "
